name: Production
on:
  push:
    paths:
      - 'server/**'
    branches:
      - 'main'
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/bethehero-api:${{  github.sha }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  PROJECT_ID_DEVOPS_STORAGE: ${{ secrets.PROJECT_ID_DEVOPS_STORAGE }}
  GCP_SA_KEY_DEVOPS_STORAGE: ${{ secrets.GCP_SA_KEY_DEVOPS_STORAGE }}
  TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_gcp_project_image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/bethehero-api:${{  github.sha }}
  TF_VAR_gcp_key_file: ${{ secrets.GCP_SA_KEY }}
  TF_VAR_service_name: bethehero-api
  TF_VAR_gcp_region: us-east4
  TF_VAR_gcp_zone: us-east4-a
  TF_VAR_domain_service: api.bethehero.projects.themark.dev
  TF_VAR_NODE_ENV: production
  TF_VAR_ENV_SENTRY_DSN: ${{ secrets.ENV_SENTRY_DSN }}
  TF_VAR_ENV_DATABASE_URL: ${{ secrets.ENV_DATABASE_URL }}

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t ${{ env.GCP_IMAGE }} ./
        docker push ${{ env.GCP_IMAGE }}
  deploy:
    needs: build
    name: 'Deploy - Terraform'
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://${{ env.TF_VAR_domain_service }}/docs

    defaults:
      run:
        shell: bash
        working-directory: ./server
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID_DEVOPS_STORAGE }}
        service_account_key: ${{ env.GCP_SA_KEY_DEVOPS_STORAGE }}
        export_default_credentials: true

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="prefix=terraform/${{ env.TF_VAR_NODE_ENV }}/${{ env.TF_VAR_service_name }}"

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
